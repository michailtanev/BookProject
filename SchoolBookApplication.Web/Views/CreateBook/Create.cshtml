@model SchoolBookApplication.Web.Models.CreateBookViewModel
@{
    ViewBag.Title = "Create";
}

<h2 class="info" style="margin-left:15px;">Sell Your Book</h2>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>

<hr />
@using (Html.BeginForm("Create", "CreateBook", FormMethod.Post, new { @class = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="main col-lg-12 myHalfCol">
        <div class="col-lg-6">
            <div class="form-horizontal myHormHorizontal">
                @*<hr />*@
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.SalePrice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SalePrice, new { htmlAttributes = new { placeholder = "Enter Sale Price", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SalePrice, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.OriginaPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.OriginaPrice, new { htmlAttributes = new { placeholder = "Enter Original Price", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OriginaPrice, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { placeholder = "Enter Title", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>        

                <div class="form-group">
                    @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Author, new { htmlAttributes = new { placeholder = "Enter Author", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
                    </div>
                </div>      
                @{
                    List<SelectListItem> listCategories = new List<SelectListItem>();
                    listCategories.Add(new SelectListItem { Text = "Computer Science", Value = "Computer Science" });
                    listCategories.Add(new SelectListItem { Text = "Multimedia Design", Value = "Multimedia Design" });
                    listCategories.Add(new SelectListItem { Text = "IT Technology", Value = "IT Technology" });
                    listCategories.Add(new SelectListItem { Text = "Production Technology", Value = "Production Technology" });

                }
                <div class="form-group">
                    @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Category, listCategories, "Select Category", new { @class = "form-control" })
                        @*@Html.EditorFor(model => model.Category, new { htmlAttributes = new { placeholder = "Enter Category", @class = "form-control" } })*@
                        @*@Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })*@
                    </div>
                </div>
                @{
                    List<SelectListItem> listItems = new List<SelectListItem>();
                    listItems.Add(new SelectListItem { Text = "Used - Like New", Value = "Used - Like New" });
                    listItems.Add(new SelectListItem { Text = "Used - Very Good",Value = "Used - Very Good" });
                    listItems.Add(new SelectListItem { Text = "Used - Acceptable", Value = "Used - Acceptable" });
                }
                <div class="form-group">
                    @Html.LabelFor(model => model.AdditionalInformation, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10 ">
                        @Html.DropDownListFor(model => model.AdditionalInformation, listItems, "Select Condition", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(Model => Model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Year", new SelectList(Enumerable.Range(2000, DateTime.Now.Year - 1999)
                        .ToList()), "-- Select Year --", Model.Year)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UploadPhoto, htmlAttributes: new {  @class = "control-label col-md-2" })
                    <div class="col-md-10">                        
                        @Html.TextBoxFor(model => model.UploadPhoto, htmlAttributes: new { enctype = "multipart/form-data", type = "file", id = "imgInp"})<br />
                    </div>
                </div>
              </div>
            </div>
     <div class="col-lg-6">              
          @*<img id="choosePic" src="#" class="img-responsive" onclick = "rotateBy10Deg(this)"   />*@         
     </div>
     <div class="form-group">
       <div class="col-md-offset-2 col-md-10 dimension">
         <input type="submit" value="Create" class="btn btn-primary btn-default"/>
         <a href="@Url.Action("Index","Home")" class="btn btn-danger btn-default">Cancel</a>
                      @if (TempData["Success"] != null)
                      {
                        <div class="green">
                            <h3 class="alert alert-success" id="successMessage"><strong> @TempData["Success"]</strong></h3>
                        </div>                      
                      }
        </div>
     </div>
   </div>

}

<script>
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#choosePic').attr('src', e.target.result)
                    .height(450);
            }

            reader.readAsDataURL(input.files[0]);
        }
    }

    $("#imgInp").change(function () {
        readURL(this);
    });

   
    var delta = 0;
    function rotateBy10Deg(imgInp){
        imgInp.style.webkitTransform = "rotate(" + delta + "deg)";
        delta+=90;
    }


</script>

@section Scripts {
      @Scripts.Render("~/bundles/jqueryval")
}
